 chrome.fileSystem.getWritableEntry(chosenFileEntry, function(writableFileEntry) {
    writableFileEntry.createWriter(function(writer) {
      writer.onerror = errorHandler;
      writer.onwriteend = callback;

    chosenFileEntry.file(function(file) {
      writer.write(file);
    });
  }, errorHandler);
});



"permissions": [
  "...",
  "fileSystem"
]



****************
Date.now() gives the timestamp we need

We need to create a new listener 

to do:
- chrome.sync options (speed up recording)
- chrome.tabs.onCreated.addListener or EventListener({
    tabs.pushState... ({
      //write to file
      //format - tabId:URL:0/1:timestamp
      https.packets.addEventListener({
        //write to file
        //format - time:packet
      })
    })
  })

3 main methods:
- addListener/addEventListener -> laura
    callbacks, how it loops, how it executes, make own function of a listener 
    chrome.tabs.onCreated.addListener(addEventListener)(function(){
      tabs.onRemoved(function(){
        alert(' you closed a tab.') // <a href="#" id="tabs-alertinfo">
      })
    }



- write -> iqra
  see if u can get a document to write to 
  https://developer.chrome.com/apps/app_storage
- when to do pushState -> john
   pushState,hashChange
    see how websites changing
